(Japanese, UTF-8)

表題：「MZ-IME日本語入力」仕様書
著者：片山博文MZ

=動機

ReactOSの日本語入力を実現するため、Windows 2000用の日本語IMEを作ることにした。

=定義

「IME (input method editor)」とは、Windowsにおいて入力内容の変換を行い、漢字などの入力を助けるソフトウェアのことである。
「MZ-IME日本語入力」（以下「MZ-IME」）とは、これから作成しようとしている、Windows 2000で動作する日本語IMEである。
「MZ-IME」の暗号名は「mzimeja」である。

「コンポジション文字列 (composition string)」とは、未確定で仮にIMEに入力されている文字列である。
「コンポジション文字列」は、仮の入力なので、Escキーでキャンセルできる。
「コンポジションウィンドウ (composition window)」とは、未確定なコンポジション文字列を表示するためのIME UIウィンドウである。
「候補ウィンドウ (candidate window)」とは、文節の変換において、IMEが用意した選択肢の中から選ぶことが可能なIME UIウィンドウである。
「変換候補 (candidate)」とは、コンポジションウィンドウや候補ウィンドウで選ぶことができる選択肢のことである。
「ガイドライン (guideline)」（略して「ガイド (guide)」）とは、IMEに関してユーザに伝えたい情報やエラーなどを表示する機能である。
「ガイドウィンドウ」は、そのような情報やエラーなどを表示するウィンドウである。
「状態ウィンドウ」は、IMEの状態を表示したり、変換モードなどを変更するためのウィンドウである。
「IME UIウィンドウ」とは、候補ウィンドウ、ガイドウィンドウ、コンポジションウィンドウなど、IMEの操作系を実現するためのウィンドウである。
「確定 (determinate)」とは、IMEへの文字入力がアプリ側に受け入れられ、結果文字列がアプリに入力された状態を指す。
「結果文字列 (result string)」とは、IMEで変換候補を選んだ結果の文字列を指す。
「未確定 (indeterminate)」とは確定されていない状態を指す。
「文節 (clause)」とは、変換候補を選ぶための字句のまとまりのことである。
「入力コンテキスト (Input Context)」とは、INPUTCONTEXT構造体またはHIMCハンドルによって扱われる入力状態を表すデータである。
「IME変換インターフェイス」とは、IMEとIMMとアプリ間で変換のための対話を行うためのインターフェイスである。
「IME UI」は、「IME UIウィンドウ」「IMEメニュー」などによるユーザ操作用のインターフェイスのことである。

「IMEクラス」とは、IMEのインストール後に定義済みになるグローバルなウィンドウクラスのことであり、IME UIを実現するためにある。
「IMEクラス」は、CS_IMEクラススタイルを持つ。
「IMEクラス」は、IMEのDLLが
「IMEウィンドウ」はIMEクラスのウィンドウである。
「IMEウィンドウ」はWS_DISABLEDウィンドウスタイルを持っていなければならない。
「既定のIMEウィンドウ」は、アプリ側からImmGetDefaultIMEWnd関数によって取得できる、IMEクラスのウィンドウである。
「キーボードレイアウト」とは、システムが言語の種類と入力方法を管理するためのデータである。
「hKL」および「HKL」は、キーボードレイアウトのハンドルである。
「IME DLL」とは、IMEの実体となるDLLファイルのことである。

「変換モード」とは、入力コンテキストのfdwConversionに指定するIME_CMODE_で始まるフラグの組み合わせのことである。
「文字コード入力状態」とは、(fdwConversion & IME_CMODE_CHARCODE)であるときのことである。
「全角入力状態」とは(fdwConversion & IME_CMODE_FULLSHAPE)のときのことである。
「半角入力状態」とは「全角入力状態」ではないときのことである。
「英数字入力状態」とは、!(fdwConversion & IME_CMODE_LANGUAGE)のときのことである。
「ローマ字入力状態」とは、(fdwConversion & IME_CMODE_ROMAN)のときのことである。
「カタカナ入力状態」とは、
    ((fdwConversion & IME_CMODE_LANGUAGE) == (IME_CMODE_JAPANESE | IME_CMODE_KATAKANA))
のときのことである。
「全角カタカナ入力状態」とは、「全角入力状態」かつ「カタカナ入力状態」のときのことである。
「ひらがな入力状態」とは、「全角入力状態」かつ
    ((fdwConversion & IME_CMODE_LANGUAGE) == IME_CMODE_JAPANESE)
のときのことである。

「入力モード」とは、IMEのオープン状態と変換モードを統一して扱うためのモードであり、
「入力モード」には、「直接入力モード」「ひらがな入力モード」「カタカナ入力モード」
「全角英数入力モード」「半角カナ入力モード」「半角英数入力モード」の六種類ある。

「直接入力モード」は、IMEが閉じている状態である。
「ひらがな入力モード」は、IMEが開いていて、「ひらがな入力状態」のときのことである。
「カタカナ入力モード」は、IMEが開いていて、「全角カタカナ入力状態」のときのことである。
「全角英数入力モード」は、IMEが開いていて、「全角入力状態」かつ「英数字入力状態」のときのことである。
「半角カナ入力モード」は、IMEが開いていて、「半角入力状態」かつ「カタカナ入力状態」のときのことである。
「半角英数入力モード」は、IMEが開いていて、「半角入力状態」かつ「英数入力状態」のときのことである。

「オープン状態」とは、「入力コンテキスト」のfOpenがTRUEである状態である。
「コンポジション文字列がある」とは、「入力コンテキスト」のhCompStrのサイズがsizeof(COMPOSITIONSTRING)以上であるときをいう。

「メッセージを生成する」とは、MZIMEJA::GenerateMessageを呼び出すことである。

=IMEエンジンの動作仕様

IMEが
    lpIMC->fdwConversion = fdwConversion;
によって変換モードを変換した後は、
    GenerateMessage(WM_IME_NOTIFY, IMN_SETCONVERSIONMODE);
を行わなければならない。

=NotifyIME関数の動作仕様

NotifyIME関数は与えられた引数に従ってIMEの状態を変更する。

    BOOL WINAPI NotifyIME(HIMC hIMC, DWORD dwAction, DWORD dwIndex, DWORD dwValue);

==dwActionがNI_COMPOSITIONSTRのとき

dwIndexの値に従って処理を行う。

===dwIndexがCPS_COMPLETEのとき

結果文字列を作成し、確定する。

===dwIndexがCPS_CONVERTのとき

変換する。

=ImeToAsciiEx関数の動作仕様

ImeToAsciiEx関数は、引数hIMCに基づき、IME変換エンジンを通じて変換結果を生成する。

    UINT WINAPI ImeToAsciiEx(UINT uVKey, UINT uScanCode, CONST LPBYTE lpbKeyState,
                             LPTRANSMSGLIST lpTransBuf, UINT fuState, HIMC hIMC);

ImeToAsciiEx関数においてメッセージを生成する場合は、引数lpTransBufを経由して行わなければ
ならない。ImeToAsciiExは以下のキーを処理する。

    VK_ESCAPE   コンポジション文字列をクリアする。
    VK_DELETE   現在位置のコンポジション文字を削除する。
    VK_BACK     一つ前のコンポジション文字を削除する。
    VK_SPACE    変換する。
    VK_TAB      候補リストを表示する。
    VK_F6       コンポジション文字列をひらがなへ変換する。
    VK_F7       コンポジション文字列をカタカナへ変換する。
    VK_F8       コンポジション文字列を半角カナへ変換する。
    VK_F9       コンポジション文字列を全角英数へ変換する。
    VK_F10      コンポジション文字列を半角英数へ変換する。
    VK_RETURN   確定する。
    VK_KANA     全角モードへ切り替える。
    VK_KANJI    全角／半角を切り替える。
    VK_LEFT     左へ。
    VK_RIGHT    右へ。
    VK_UP       上へ。
    VK_DOWN     下へ。
    VK_HOME     先頭へ。
    VK_END      終端へ。
    VK_PRIOR    前の候補リストへ。
    VK_NEXT     前の候補リストへ。
    その他      文字をコンポジション文字列に追加する。

=ImeProcessKey関数の動作仕様

ImeProcessKey関数は、IMEによって扱うキーを振り分ける。

    BOOL WINAPI ImeProcessKey(HIMC hIMC, UINT vKey, LPARAM lKeyData,
                              CONST LPBYTE lpbKeyState);

戻り値がTRUEであれば、vKeyは、IMEによって扱うキーである。

キーの振り分けは、「オープン状態」、コンポジション文字列の有無、
候補リストの有無、Altキー、Ctrlキー、Shiftキーが押されているかによって異なる。
Altキーが押されているかどうかは、(lpbKeyState[VK_MENU] & 0x80)によって確認できる。
Ctrlキーが押されているかどうかは、(lpbKeyState[VK_CONTROL] & 0x80)によって確認できる。
Shiftキーが押されているかどうかは、(lpbKeyState[VK_SHIFT] & 0x80)によって確認できる。

オープン状態がFALSEであれば、VK_KANJIとAtl+VK_KANJIのみを扱う。
オープン状態がTRUEであれば、
    * Altが押されている場合は、VK_KANJIを扱う。
    * Altが押されていない場合は、
        * ShiftもCtrlも押されていない場合は、
            VK_KANJI（半角／全角・漢字）、
            VK_OEM_AUTO（半角／全角・漢字）、
            VK_OEM_ENLW（半角／全角・漢字）
            VK_OEM_PLUS、VK_OEM_MINUS、VK_OEM_PERIOD、VK_OEM_COMMA、
            VK_OEM_1～VK_OEM_8、VK_OEM_102、
            '0'～'9'、'A'～'Z'、
            VK_NUMPAD0 ～ VK_NUMPAD9、
            VK_ADD、VK_SUBTRACT、VK_MULTIPLY、VK_DIVIDE、VK_SEPARATOR、VK_DECIMAL、
            VK_LEFT、VK_UP、VK_RIGHT、VK_DOWN、
            VK_SPACE、VK_BACK、VK_DELETE、VK_RETURN、
            VK_CAPITAL、VK_CONVERT、VK_NONCONVERT、
            VK_OEM_COPY（カタカナ・ひらがな・ローマ字）、
            を扱う。
       * Ctrlが押されている場合は、
         * 候補リストがある場合は、
            '1'～'8'を扱う。
         * コンポジション文字列も候補リストもない場合は、
            何も扱わない。
       * Ctrlが押されていない場合は、
         * Shiftが押されている場合は、
               VK_BACK、VK_TAB、VK_RETURN、
               VK_SPACE、VK_END、VK_HOME
           * VK_PRIOR、VK_NEXT、

ただし、コンポジション文字列がある場合は、
VK_F6～VK_F10、VK_HOME、VK_END、VK_ESCAPEも扱う。

=状態ウィンドウの動作仕様

「状態ウィンドウ」の内部名は「StatusWnd」である。
「状態ウィンドウ」は、「入力モード切替ボタン」と「ローマ字入力切替ボタン」の２つのボタンを持つ。
ボタンは、サイズ24x24のイメージを持つ。
イメージは、サイズ24x192のビットマップ「res/modes.bmp」によって与えられる。
「ドラッグ可能領域」とは、ボタン以外のドラッグ移動用の領域のことである。
ユーザが「入力モード切替ボタン」を左クリックすると、「入力モード切替メニュー」が表示される。

==入力モード切替ボタン

「入力モード切替ボタン」の内部名は「ModeButton」である。

「入力モード切替ボタン」は、「入力モード」の状態を表示する。

「入力モード切替ボタン」を左クリックすると、「入力モードメニュー」を表示する。
「入力モードメニュー」の項目をクリックすると、入力モードが切り替わり、
それに合わせて「入力モード切替ボタン」のイメージも更新される。

「入力モード切替ボタン」を右クリックすると、「IME共通メニュー」を表示する。

==ローマ字入力切替ボタン

「ローマ字入力切替ボタン」の内部名は「RomaButton」である。

初期状態では、「ローマ字入力状態」であるから、「ローマ字入力切替ボタン」のイメージはONである。
「ローマ字入力切替ボタン」左クリックすると、ローマ字入力状態が切り替わり、
「ローマ字入力状態」のときに「ローマ字入力切替ボタン」のイメージはONになり、
そうでないとき、「ローマ字入力切替ボタン」のイメージはOFFになる。

「ローマ字入力切替ボタン」を右クリックすると、「IME共通メニュー」を表示する。

==ドラッグ可能領域

「ドラッグ可能領域」の内部名は「DraggableArea」である。

「ドラッグ可能領域」を左ドラッグすると、状態ウィンドウが移動する。
「ドラッグ可能領域」を右クリックすると、「IME共通メニュー」を表示する。

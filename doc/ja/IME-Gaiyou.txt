(Japanese, Shift_JIS)

------------------------------------------------------------------------------
IME開発のためのWin32多言語IMEの概要
片山博文MZ
------------------------------------------------------------------------------

=概要

Windows 95とNT 4.0以降では、IME (Input Method Editor) という入力用のソフトが、
DLL形式で提供される。IME、およびシステム側でIMEを管理するIMM
 (Input Method Manager) は、

 * 多言語環境のコンポーネントとして走り、
 * それぞれのアプリのタスクごとに複数のインプットコンテキスト (Input Context)が
   提供され、
 * それぞれのアプリのスレッドごとに一つのアクティブなIMEが保たれ、
 * （メッセージ順を壊すことなく）メッセージループを通じて、アプリに情報を提供し、
 * IMEを意識したアプリかそうでないかに関わらず、強いサポートを提供する。

注記：IME開発者は、<imm.h>のスーパーセットである、DDKの<immdev.h>を使わなければ
      ならない。

=Windows 98 and Windows 2000 IMM/IME

略。

=Win32 IME構造体

新しいWin32 IMEは、2つのコンポーネントを提供する必要がある。IME変換インターフェイスと
IME操作系 (UI) だ。IME変換インターフェイスは、IMEモジュールからエクスポートされた、
関数群として提供される。それらはIMMによって呼び出せる。IME UIは、ウィンドウ
フォームとして提供される。それらのウィンドウは、メッセージを受け取り、
IMEに対するUIを提供する。

=IMEを意識したアプリ

Win32アプリは三種類に分けられる。

 * IMEを意識していないアプリ
 * IMEを半分意識しているアプリ
 * IMEを完全に意識しているアプリ

IMEを意識していないアプリは、既定のIMEウィンドウと既定の入力コンテキストでサポート
される。

IMEを半分意識しているアプリは、既定のIMEウィンドウクラスを使って、
(アプリIMEウィンドウと呼ばれる) IMEウィンドウを所有しつつ、
独自の入力コンテキストを取り扱うかもしれない。

IMEを完全に意識しているアプリは、それ自身が入力コンテキストを取り扱い、
必要な情報を、IMEウィンドウを使うことなく、表示できる。

=IME UI

IME操作系 (UI) は、IMEウィンドウ、UIウィンドウを含み、さらにUIウィンドウの
コンポーネントも含んでいる。

==特徴

IMEクラスとは、定義済みのグローバルなウィンドウクラスであり、
IMEの操作系をすべて実現する。IMEクラスの通常の特徴は、
他のコントロールと同じである。
そのウィンドウインスタンスは、CreateWindowEx関数で作成できる。
スタティックコントロールのように、ユーザーの入力に反応させなくすることも
できるが、IMEのすべての操作系を実現するために、あらゆる種類の
コントロールメッセージを受け取る。Win32アプリは、IMEクラスを使って
所有するIMEウィンドウを作成できるし、既定のIMEウィンドウを
ImmGetDefaultIMEWnd関数を通じて取得できる。古いWindows 3.1とは
違って、次のような利点がある。

 * 新しいIMEは、候補リストウィンドウを含む。
 * IME UIウィンドウは、アプリのウィンドウハンドルを知らされて、
   アプリにさまざまなふるまいを提供できる。

システムは、一つだけのIMEクラスを提供するが、それらは、
二種類のIMEウィンドウである。一つは、特にIMEを意識していないアプリに
おいて、DefWindowProc関数によって、システムによって作られるものだ。
もう一つは、IMEを意識したアプリにより作成され、アプリIMEウィンドウと
呼ばれるものだ。

=既定の、またはアプリのIMEウィンドウ

システムは、既定のIMEウィンドウをスレッドの初期化時に作成し、
それをスレッドに自動的に渡す。このIMEウィンドウが、IMEを意識していない
アプリのIME操作系となる。

IMEやIMMがWM_IME_xxxメッセージを生成するとき、IMEを意識していないアプリは、
それらをDefWindowProc関数に渡す。それから、必要なメッセージを
DefWindowProcBが既定のIMEウィンドウに送信する。
IMEを意識していないアプリでは、既定のIMEウィンドウはIMEの既定のふるまいを提供する。
IMEを意識しているアプリは、メッセージをフックしていないときでも
IMEウィンドウを使う。アプリは、必要に応じて、アプリ所有のIMEウィンドウを
使うことができる。

==IMEクラス

Win32システムは、IMEクラス（ウィンドウクラス）を提供する。このクラスは、
定義済みのEDITクラスのようなユーザーによって定義される。
システムIMEクラスは、IMEのすべてのUIを取り扱い、IMEと
アプリ（IMM関数を含む）からすべてのコントロールメッセージを取り扱う。
アプリは、このクラスを使って固有のIME UIを作成できる。
システムIMEクラスは、IMEによっては置き換えられないが、
定義済みクラスとして保たれる。

このクラスは、ウィンドウプロシージャを持つ。それは、実際に、
WM_IME_SELECTメッセージを取り扱う。このメッセージは、
新しく選択されたIMEのhKL (キーボードレイアウトのハンドル)を持っている。
システムIMEクラスは、hKLによってそれぞれのIMEで定義されたクラスの名前を
取得する。この名前を使って、システムIMEクラスは、
現在アクティブなIMEのUIウィンドウを作成する。

=IMEからのUIクラス

設計では、
